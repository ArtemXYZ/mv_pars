from parser_new.facade import MvPars

# Справочно:
# ----------------------------------------------------------------------------------------------------------------------
# pars = MvPars()

# 1) Активация выдачи информации о текущих параметрах:
# pars.info.get_headers
# pars.info.get_name_table
# и тд.

# 2) Активация установки новых параметров:
# pars.set.set_table('abs').set_base_folder_save('../data/').set_ping_limits(2.5, 3.5) ... и тд.

# 3) Активация работы основных функций:
# pars.activate.get_branches()
# pars.activate.run_one_cycle_pars()
# pars.activate.run_week_cycle_pars()
# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
pars = MvPars()
pars.set.set_ping_limits(2.5, 3.5)
# pars.activate.get_branches_dat()   # +
pars.activate.run_one_cycle_pars()






# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------

# def __init__(self, session, connection, name_table, schema, city_data, category_id_data,                 ):


#     @classmethod
#     def _check_path_file(cls, path_file):
#         """
#         Перед сохранением результатов работы парсера проверяем наличие существования директории, если таковой нет,
#         то создается.
#         """
#         # ________________________________________________ CHECK
#         # Получаем директорию из пути:
#         path_dir = os.path.dirname(path_file)
#
#         # Проверка, существует ли директория, создание её, если нет:
#         if not os.path.exists(path_dir):
#
#             print(f'Директории не существует, будет создана новая по указанному адресу.')
#             os.makedirs(path_dir)




